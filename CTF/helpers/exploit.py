from ictf import iCTF
import threading
import sys
from time import sleep
import random
import socket

def recv_until(s, text):
    BUFFER_SIZE = 2048
    data = ""
    loop = True
    while loop:
        tmp = s.recv(BUFFER_SIZE)
        if tmp.find(text) != -1: loop = False
        data += tmp
    return data

def prepare():
    ctf = iCTF()
    team = ctf.login("dominik.schlecht@hotmail.de", "cupjCQdjednhn4yZ")
    service = sys.argv[1]
    #flagIDs = team.get_current_flag_ids(service)
    results = []

    for i in range(0, 500):
        while 20 < threading.activeCount():
            sleep(0.1)
    	thread = exploit("127.0.0.1", 1337, "FLAGID")
    	results.append(thread)
    	thread.start()

class exploit(threading.Thread):
    def __init__(self, ip, port, flagID):
    	threading.Thread.__init__(self)
    	self.ip = ip
        self.port = port
    	self.flagID = flagID

    def run(self):
        sleep(random.random()*10)
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.connect((self.ip, int(self.port)))
        print s.recv(512)
        s.close()



if __name__ == '__main__':
    prepare()
